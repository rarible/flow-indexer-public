version: '3.8'

services:
  ${APPLICATION_ENVIRONMENT}-flow-indexer-api:
    image: rarible/flow-indexer-api:${VERSION}
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 100m
    deploy:
      mode: replicated
      replicas: ${PROTOCOL_API_REPLICAS}
      placement:
        constraints:
          - "node.labels.rarible.service == true"
          - "node.labels.environment == ${APPLICATION_ENVIRONMENT}"
      resources:
        limits:
          memory: ${PROTOCOL_API_MEMORY_LIMIT}
        reservations:
          memory: ${PROTOCOL_API_MEMORY_RESERVED}
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 20s
        order: start-first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/_status/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
    environment:
      - CONSUL_ROOT-PATH=${APPLICATION_ENVIRONMENT}/protocol/flow/indexer
      - SPRING_PROFILES_ACTIVE=consul,flow,${APPLICATION_ENVIRONMENT}
      - APPLICATION_ENVIRONMENT=${APPLICATION_ENVIRONMENT}
      - JAVA_OPTIONS=-Xmx${PROTOCOL_API_HEAP} -Xms${PROTOCOL_API_HEAP}
    networks:
      - ${APPLICATION_ENVIRONMENT}-backend
      - internet
      - proxy
  ${APPLICATION_ENVIRONMENT}-flow-indexer-listener:
    image: rarible/protocol-indexer-listener:${VERSION}
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 100m
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.rarible.job == true"
          - "node.labels.environment == ${APPLICATION_ENVIRONMENT}"
      resources:
        limits:
          memory: ${PROTOCOL_LISTENER_MEMORY_LIMIT}
        reservations:
          memory: ${PROTOCOL_LISTENER_MEMORY_RESERVED}
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 10s
        order: stop-first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/_status/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
    environment:
      - CONSUL_ROOT-PATH=${APPLICATION_ENVIRONMENT}/protocol/flow/indexer
      - SPRING_PROFILES_ACTIVE=consul,flow,${APPLICATION_ENVIRONMENT}
      - APPLICATION_ENVIRONMENT=${APPLICATION_ENVIRONMENT}
      - JAVA_OPTIONS=-Xmx${PROTOCOL_LISTENER_HEAP} -Xms${PROTOCOL_LISTENER_HEAP} -XX:MaxDirectMemorySize=${PROTOCOL_LISTENER_DIRECT_MEMORY}
    networks:
      - ${APPLICATION_ENVIRONMENT}-backend
      - ${ETHEREUM_NETWORK}-ethereum
      - internet
  ${APPLICATION_ENVIRONMENT}-flow-indexer-scanner:
    image: rarible/protocol-indexer-scanner:${VERSION}
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 100m
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.rarible.job == true"
          - "node.labels.environment == ${APPLICATION_ENVIRONMENT}"
      resources:
        limits:
          memory: ${PROTOCOL_EVENTS_IMPORTER_MEMORY_LIMIT}
        reservations:
          memory: ${PROTOCOL_EVENTS_IMPORTER_MEMORY_RESERVED}
      restart_policy:
        condition: any
        delay: 5s
        window: 60s
      update_config:
        parallelism: 1
        failure_action: rollback
        delay: 10s
        order: stop-first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/_status/ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 120s
    environment:
      - CONSUL_ROOT-PATH=${APPLICATION_ENVIRONMENT}/protocol/flow/indexer
      - SPRING_PROFILES_ACTIVE=consul,flow,${APPLICATION_ENVIRONMENT}
      - APPLICATION_ENVIRONMENT=${APPLICATION_ENVIRONMENT}
      - JAVA_OPTIONS=-Xmx${PROTOCOL_EVENTS_IMPORTER_HEAP} -Xms${PROTOCOL_EVENTS_IMPORTER_HEAP}
    networks:
      - ${APPLICATION_ENVIRONMENT}-backend
networks:
  prod-backend:
    external: true
  staging-backend:
    external: true
  dev-backend:
    external: true
  e2e-backend:
    external: true
  internet:
    external: true
  ropsten-ethereum:
    external: true
  rinkeby-ethereum:
    external: true
  mainnet-ethereum:
    external: true
  e2e-ethereum:
    external: true
  proxy:
    external: true